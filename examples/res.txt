epoch is 2
epoch is 2
epoch is 2
epoch is 2
epoch is 2
{'metric': tensor([[0.0108, 0.0063, 0.0393, 0.9976, 0.0054],
        [0.8179, 0.7440, 0.9088, 0.9839, 0.6920],
        [0.7497, 0.7585, 0.7417, 0.9789, 0.6002]]), 'best_metric': tensor([[0.0108, 0.0063, 0.0393, 0.9976, 0.0054],
        [0.8179, 0.7440, 0.9088, 0.9839, 0.6920],
        [0.7497, 0.7585, 0.7417, 0.9789, 0.6002]]), 'metric_3d': tensor([[0.0081, 0.0042, 0.1520, 0.9977, 0.0041],
        [0.7730, 0.8611, 0.7019, 0.9511, 0.6301],
        [0.7717, 0.7093, 0.8474, 0.9873, 0.6288]]), 'best_metric_3d': tensor([[0.0081, 0.0042, 0.1520, 0.9977, 0.0041],
        [0.7730, 0.8611, 0.7019, 0.9511, 0.6301],
        [0.7717, 0.7093, 0.8474, 0.9873, 0.6288]]), 'metric_25d': tensor([[6.4752e-04, 5.9657e-04, 7.4477e-04, 9.9751e-01, 3.2396e-04],
        [6.7751e-01, 5.5622e-01, 8.6785e-01, 9.7536e-01, 5.1272e-01],
        [2.7277e-02, 1.6073e-02, 9.1557e-02, 8.7990e-01, 1.3827e-02]]), 'best_metric_25d': tensor([[6.4752e-04, 5.9657e-04, 7.4477e-04, 9.9751e-01, 3.2396e-04],
        [6.7751e-01, 5.5622e-01, 8.6785e-01, 9.7536e-01, 5.1272e-01],
        [2.7277e-02, 1.6073e-02, 9.1557e-02, 8.7990e-01, 1.3827e-02]]), 'metric_2d': tensor([[0.0132, 0.0076, 0.0511, 0.9976, 0.0067],
        [0.7256, 0.6495, 0.8231, 0.9687, 0.5697],
        [0.5855, 0.5806, 0.5909, 0.9666, 0.4147]]), 'best_metric_2d': tensor([[0.0132, 0.0076, 0.0511, 0.9976, 0.0067],
        [0.7256, 0.6495, 0.8231, 0.9687, 0.5697],
        [0.5855, 0.5806, 0.5909, 0.9666, 0.4147]])}
{'metric': tensor([[0.0024, 0.0026, 0.0025, 0.9968, 0.0012],
        [0.7033, 0.5914, 0.8701, 0.9779, 0.5439],
        [0.6174, 0.6828, 0.5636, 0.9645, 0.4467]]), 'best_metric': tensor([[0.0171, 0.0116, 0.0367, 0.9969, 0.0086],
        [0.6515, 0.5460, 0.8112, 0.9676, 0.4843],
        [0.3747, 0.4391, 0.3270, 0.9455, 0.2306]]), 'metric_3d': tensor([[1.7259e-08, 0.0000e+00, 0.0000e+00, 9.9676e-01, 8.6294e-11],
        [6.8773e-01, 5.2647e-01, 9.9674e-01, 9.9938e-01, 5.2552e-01],
        [1.3419e-02, 4.4218e-01, 6.8214e-03, 9.2408e-01, 6.7670e-03]]), 'best_metric_3d': tensor([[0.0035, 0.0024, 0.0068, 0.9968, 0.0017],
        [0.6872, 0.5337, 0.9695, 0.9944, 0.5247],
        [0.0183, 0.1276, 0.0098, 0.9240, 0.0092]]), 'metric_25d': tensor([[0.0435, 0.0241, 0.2542, 0.9975, 0.0223],
        [0.5877, 0.5939, 0.5830, 0.9341, 0.4168],
        [0.5748, 0.4815, 0.7135, 0.9754, 0.4036]]), 'best_metric_25d': tensor([[0.0369, 0.0196, 0.3859, 0.9979, 0.0189],
        [0.4337, 0.4931, 0.3884, 0.9061, 0.2771],
        [0.4041, 0.3255, 0.5334, 0.9593, 0.2534]]), 'metric_2d': tensor([[0.0106, 0.0072, 0.0233, 0.9968, 0.0053],
        [0.5792, 0.4765, 0.7413, 0.9550, 0.4084],
        [0.5747, 0.5818, 0.5678, 0.9644, 0.4036]]), 'best_metric_2d': tensor([[0.0171, 0.0103, 0.0586, 0.9969, 0.0086],
        [0.4790, 0.4221, 0.5569, 0.9259, 0.3153],
        [0.4145, 0.4768, 0.3668, 0.9486, 0.2615]])}
{'metric': tensor([[0.0085, 0.0098, 0.0079, 0.9966, 0.0043],
        [0.6034, 0.4528, 0.9038, 0.9856, 0.4320],
        [0.5190, 0.4062, 0.7194, 0.9767, 0.3505]]), 'best_metric': tensor([[0.0085, 0.0098, 0.0079, 0.9966, 0.0043],
        [0.6034, 0.4528, 0.9038, 0.9856, 0.4320],
        [0.5190, 0.4062, 0.7194, 0.9767, 0.3505]]), 'metric_3d': tensor([[0.0029, 0.0076, 0.0018, 0.9965, 0.0014],
        [0.2246, 0.1272, 0.9587, 0.9623, 0.1265],
        [0.7141, 0.8959, 0.5940, 0.9691, 0.5555]]), 'best_metric_3d': tensor([[0.0029, 0.0076, 0.0018, 0.9965, 0.0014],
        [0.2246, 0.1272, 0.9587, 0.9623, 0.1265],
        [0.7141, 0.8959, 0.5940, 0.9691, 0.5555]]), 'metric_25d': tensor([[0.0259, 0.0151, 0.0991, 0.9968, 0.0132],
        [0.4272, 0.4126, 0.4429, 0.9266, 0.2716],
        [0.2712, 0.1603, 0.8811, 0.9857, 0.1569]]), 'best_metric_25d': tensor([[0.0259, 0.0151, 0.0991, 0.9968, 0.0132],
        [0.4272, 0.4126, 0.4429, 0.9266, 0.2716],
        [0.2712, 0.1603, 0.8811, 0.9857, 0.1569]]), 'metric_2d': tensor([[0.0155, 0.0113, 0.0272, 0.9966, 0.0078],
        [0.6465, 0.5558, 0.7727, 0.9687, 0.4777],
        [0.3196, 0.2071, 0.7001, 0.9712, 0.1902]]), 'best_metric_2d': tensor([[0.0155, 0.0113, 0.0272, 0.9966, 0.0078],
        [0.6465, 0.5558, 0.7727, 0.9687, 0.4777],
        [0.3196, 0.2071, 0.7001, 0.9712, 0.1902]])}
{'metric': tensor([[0.0171, 0.0088, 0.4208, 0.9970, 0.0087],
        [0.7397, 0.7250, 0.7552, 0.9650, 0.5869],
        [0.7698, 0.7298, 0.8151, 0.9852, 0.6259]]), 'best_metric': tensor([[0.0171, 0.0088, 0.4208, 0.9970, 0.0087],
        [0.7397, 0.7250, 0.7552, 0.9650, 0.5869],
        [0.7698, 0.7298, 0.8151, 0.9852, 0.6259]]), 'metric_3d': tensor([[0.0205, 0.0107, 0.2909, 0.9966, 0.0104],
        [0.7238, 0.7380, 0.7102, 0.9591, 0.5672],
        [0.7995, 0.7892, 0.8109, 0.9849, 0.6662]]), 'best_metric_3d': tensor([[0.0205, 0.0107, 0.2909, 0.9966, 0.0104],
        [0.7238, 0.7380, 0.7102, 0.9591, 0.5672],
        [0.7995, 0.7892, 0.8109, 0.9849, 0.6662]]), 'metric_25d': tensor([[0.0230, 0.0117, 0.7292, 0.9984, 0.0117],
        [0.3276, 0.6249, 0.2220, 0.8989, 0.1959],
        [0.6730, 0.6793, 0.6678, 0.9737, 0.5074]]), 'best_metric_25d': tensor([[0.0230, 0.0117, 0.7292, 0.9984, 0.0117],
        [0.3276, 0.6249, 0.2220, 0.8989, 0.1959],
        [0.6730, 0.6793, 0.6678, 0.9737, 0.5074]]), 'metric_2d': tensor([[0.0036, 0.0018, 0.2272, 0.9914, 0.0018],
        [0.6643, 0.6044, 0.7377, 0.9615, 0.4973],
        [0.5394, 0.4272, 0.7323, 0.9775, 0.3694]]), 'best_metric_2d': tensor([[0.0036, 0.0018, 0.2272, 0.9914, 0.0018],
        [0.6643, 0.6044, 0.7377, 0.9615, 0.4973],
        [0.5394, 0.4272, 0.7323, 0.9775, 0.3694]])}
{'metric': tensor([[1.9565e-03, 1.6541e-03, 2.4142e-03, 9.9754e-01, 9.7955e-04],
        [7.9548e-01, 6.8718e-01, 9.4531e-01, 9.8891e-01, 6.6059e-01],
        [6.9349e-01, 8.4194e-01, 5.9051e-01, 9.6736e-01, 5.3094e-01]]), 'best_metric': tensor([[1.9565e-03, 1.6541e-03, 2.4142e-03, 9.9754e-01, 9.7955e-04],
        [7.9548e-01, 6.8718e-01, 9.4531e-01, 9.8891e-01, 6.6059e-01],
        [6.9349e-01, 8.4194e-01, 5.9051e-01, 9.6736e-01, 5.3094e-01]]), 'metric_3d': tensor([[0.0117, 0.0077, 0.0248, 0.9976, 0.0059],
        [0.7837, 0.7877, 0.7805, 0.9586, 0.6448],
        [0.7230, 0.6428, 0.8294, 0.9857, 0.5672]]), 'best_metric_3d': tensor([[0.0117, 0.0077, 0.0248, 0.9976, 0.0059],
        [0.7837, 0.7877, 0.7805, 0.9586, 0.6448],
        [0.7230, 0.6428, 0.8294, 0.9857, 0.5672]]), 'metric_25d': tensor([[0.0066, 0.0136, 0.0045, 0.9976, 0.0033],
        [0.6583, 0.6182, 0.7047, 0.9424, 0.4907],
        [0.5047, 0.4704, 0.5461, 0.9626, 0.3379]]), 'best_metric_25d': tensor([[0.0066, 0.0136, 0.0045, 0.9976, 0.0033],
        [0.6583, 0.6182, 0.7047, 0.9424, 0.4907],
        [0.5047, 0.4704, 0.5461, 0.9626, 0.3379]]), 'metric_2d': tensor([[8.0005e-03, 4.4411e-03, 4.1023e-02, 9.9760e-01, 4.0206e-03],
        [5.9572e-01, 4.2967e-01, 9.7266e-01, 9.9323e-01, 4.2449e-01],
        [2.9899e-04, 1.3182e-03, 1.6932e-04, 9.2396e-01, 1.4952e-04]]), 'best_metric_2d': tensor([[8.0005e-03, 4.4411e-03, 4.1023e-02, 9.9760e-01, 4.0206e-03],
        [5.9572e-01, 4.2967e-01, 9.7266e-01, 9.9323e-01, 4.2449e-01],
        [2.9899e-04, 1.3182e-03, 1.6932e-04, 9.2396e-01, 1.4952e-04]])}
{'metric': tensor([[0.0046, 0.0024, 0.0718, 0.9961, 0.0023],
        [0.7476, 0.7477, 0.7481, 0.9431, 0.5970],
        [0.6655, 0.5710, 0.7997, 0.9805, 0.4989]]), 'best_metric': tensor([[0.0046, 0.0024, 0.0718, 0.9961, 0.0023],
        [0.7476, 0.7477, 0.7481, 0.9431, 0.5970],
        [0.6655, 0.5710, 0.7997, 0.9805, 0.4989]]), 'metric_3d': tensor([[1.8433e-03, 9.8251e-04, 1.5540e-02, 9.9613e-01, 9.2282e-04],
        [8.0955e-01, 8.0950e-01, 8.1029e-01, 9.5713e-01, 6.8024e-01],
        [7.3294e-01, 6.7799e-01, 8.0041e-01, 9.8102e-01, 5.7859e-01]]), 'best_metric_3d': tensor([[1.8433e-03, 9.8251e-04, 1.5540e-02, 9.9613e-01, 9.2282e-04],
        [8.0955e-01, 8.0950e-01, 8.1029e-01, 9.5713e-01, 6.8024e-01],
        [7.3294e-01, 6.7799e-01, 8.0041e-01, 9.8102e-01, 5.7859e-01]]), 'metric_25d': tensor([[0.0029, 0.0015, 0.0912, 0.9956, 0.0014],
        [0.5695, 0.5607, 0.5787, 0.9042, 0.3981],
        [0.4171, 0.3447, 0.5287, 0.9536, 0.2635]]), 'best_metric_25d': tensor([[0.0029, 0.0015, 0.0912, 0.9956, 0.0014],
        [0.5695, 0.5607, 0.5787, 0.9042, 0.3981],
        [0.4171, 0.3447, 0.5287, 0.9536, 0.2635]]), 'metric_2d': tensor([[0.0057, 0.0029, 0.2425, 0.9960, 0.0028],
        [0.6235, 0.7361, 0.5409, 0.9022, 0.4530],
        [0.5549, 0.4259, 0.7969, 0.9793, 0.3841]]), 'best_metric_2d': tensor([[0.0057, 0.0029, 0.2425, 0.9960, 0.0028],
        [0.6235, 0.7361, 0.5409, 0.9022, 0.4530],
        [0.5549, 0.4259, 0.7969, 0.9793, 0.3841]])}
res 3d is tensor([[0.0075, 0.0052, 0.0808, 0.9969, 0.0038],
        [0.6671, 0.6417, 0.8264, 0.9646, 0.5291],
        [0.6258, 0.6929, 0.6481, 0.9720, 0.5005]]) +- tensor([[0.0077, 0.0042, 0.1178, 0.0006, 0.0039],
        [0.2211, 0.2774, 0.1248, 0.0174, 0.2049],
        [0.3017, 0.1525, 0.3275, 0.0244, 0.2455]])
 res 3d best is tensor([[0.0081, 0.0056, 0.0820, 0.9969, 0.0041],
        [0.6670, 0.6429, 0.8219, 0.9638, 0.5289],
        [0.6266, 0.6405, 0.6486, 0.9720, 0.5009]]) +- tensor([[0.0071, 0.0037, 0.1169, 0.0006, 0.0036],
        [0.2211, 0.2768, 0.1176, 0.0154, 0.2049],
        [0.2998, 0.2670, 0.3264, 0.0244, 0.2445]])
 res 25d is tensor([[0.0171, 0.0111, 0.1965, 0.9972, 0.0087],
        [0.5413, 0.5611, 0.5665, 0.9303, 0.3810],
        [0.4113, 0.3587, 0.5715, 0.9552, 0.2805]]) +- tensor([[0.0167, 0.0089, 0.2767, 0.0009, 0.0085],
        [0.1370, 0.0781, 0.2210, 0.0278, 0.1243],
        [0.2328, 0.2397, 0.2676, 0.0385, 0.1770]])
 res 25d best is tensor([[0.0160, 0.0104, 0.2185, 0.9973, 0.0081],
        [0.5156, 0.5443, 0.5341, 0.9256, 0.3577],
        [0.3829, 0.3327, 0.5415, 0.9525, 0.2555]]) +- tensor([[0.0147, 0.0077, 0.2872, 0.0010, 0.0075],
        [0.1410, 0.0804, 0.2321, 0.0294, 0.1292],
        [0.2189, 0.2321, 0.2584, 0.0373, 0.1664]])
 res 2d is tensor([[0.0094, 0.0059, 0.1021, 0.9960, 0.0047],
        [0.6391, 0.5753, 0.7647, 0.9582, 0.4718],
        [0.4291, 0.3707, 0.5647, 0.9638, 0.2937]]) +- tensor([[0.0045, 0.0035, 0.1035, 0.0023, 0.0023],
        [0.0527, 0.1127, 0.1400, 0.0304, 0.0581],
        [0.2322, 0.2272, 0.2897, 0.0204, 0.1658]])
 res 2d best is tensor([[0.0105, 0.0064, 0.1079, 0.9960, 0.0053],
        [0.6224, 0.5663, 0.7340, 0.9534, 0.4563],
        [0.4024, 0.3532, 0.5312, 0.9612, 0.2700]])  +- tensor([[0.0055, 0.0039, 0.0990, 0.0023, 0.0028],
        [0.0828, 0.1239, 0.1644, 0.0332, 0.0847],
        [0.2210, 0.2111, 0.3007, 0.0213, 0.1569]])
merge res is tensor([[0.0076, 0.0053, 0.0908, 0.9969, 0.0038],
        [0.7345, 0.6580, 0.8552, 0.9741, 0.5854],
        [0.6692, 0.6650, 0.7050, 0.9755, 0.5088]]) +- tensor([[0.0058, 0.0035, 0.1640, 0.0006, 0.0030],
        [0.0762, 0.1160, 0.0837, 0.0174, 0.0921],
        [0.0922, 0.1552, 0.1056, 0.0080, 0.1016]]) 
merge best res is tensor([[0.0100, 0.0068, 0.0965, 0.9969, 0.0051],
        [0.7259, 0.6505, 0.8454, 0.9723, 0.5755],
        [0.6287, 0.6244, 0.6655, 0.9724, 0.4728]]) +- tensor([[0.0063, 0.0041, 0.1608, 0.0006, 0.0032],
        [0.0831, 0.1225, 0.0851, 0.0174, 0.1003],
        [0.1528, 0.1796, 0.1840, 0.0144, 0.1532]]) 

epoch is 250
{'metric': tensor([[0.7912, 0.8774, 0.7209, 0.9993, 0.6583],
        [0.9168, 0.8896, 0.9465, 0.9908, 0.8465],
        [0.9029, 0.9104, 0.8963, 0.9913, 0.8230]]), 'best_metric': tensor([[0.7824, 0.8954, 0.6952, 0.9993, 0.6460],
        [0.9159, 0.8792, 0.9564, 0.9925, 0.8450],
        [0.9036, 0.9238, 0.8849, 0.9904, 0.8241]]), 'metric_3d': tensor([[0.8073, 0.8371, 0.7804, 0.9995, 0.6803],
        [0.9142, 0.9032, 0.9263, 0.9875, 0.8421],
        [0.8984, 0.8885, 0.9097, 0.9924, 0.8156]]), 'best_metric_3d': tensor([[0.8048, 0.8255, 0.7859, 0.9995, 0.6767],
        [0.9194, 0.9019, 0.9383, 0.9895, 0.8509],
        [0.9053, 0.9023, 0.9095, 0.9924, 0.8271]]), 'metric_25d': tensor([[0.6810, 0.7264, 0.6417, 0.9992, 0.5214],
        [0.8963, 0.8701, 0.9247, 0.9872, 0.8122],
        [0.8647, 0.8701, 0.8603, 0.9884, 0.7617]]), 'best_metric_25d': tensor([[0.3864, 0.8056, 0.2548, 0.9982, 0.2400],
        [0.8924, 0.8340, 0.9603, 0.9931, 0.8059],
        [0.8381, 0.9183, 0.7713, 0.9813, 0.7214]]), 'metric_2d': tensor([[0.7027, 0.7600, 0.6536, 0.9992, 0.5442],
        [0.8808, 0.8567, 0.9070, 0.9841, 0.7871],
        [0.8447, 0.8415, 0.8487, 0.9875, 0.7312]]), 'best_metric_2d': tensor([[0.3786, 0.7108, 0.2596, 0.9981, 0.2336],
        [0.8829, 0.8548, 0.9135, 0.9852, 0.7905],
        [0.8560, 0.8475, 0.8653, 0.9888, 0.7482]])}
{'metric': tensor([[0.7909, 0.9001, 0.7087, 0.9990, 0.6546],
        [0.8906, 0.8395, 0.9495, 0.9919, 0.8038],
        [0.8925, 0.9123, 0.8737, 0.9896, 0.8060]]), 'best_metric': tensor([[0.7940, 0.8943, 0.7176, 0.9991, 0.6589],
        [0.8906, 0.8399, 0.9489, 0.9918, 0.8037],
        [0.8962, 0.9105, 0.8824, 0.9903, 0.8121]]), 'metric_3d': tensor([[0.8016, 0.8810, 0.7398, 0.9991, 0.6694],
        [0.8909, 0.8611, 0.9238, 0.9879, 0.8044],
        [0.8973, 0.8815, 0.9140, 0.9929, 0.8139]]), 'best_metric_3d': tensor([[0.8081, 0.8723, 0.7572, 0.9992, 0.6789],
        [0.8940, 0.8668, 0.9238, 0.9879, 0.8093],
        [0.9014, 0.8825, 0.9213, 0.9935, 0.8205]]), 'metric_25d': tensor([[0.7504, 0.8055, 0.7100, 0.9990, 0.6016],
        [0.8797, 0.8311, 0.9354, 0.9896, 0.7862],
        [0.8639, 0.8872, 0.8419, 0.9870, 0.7608]]), 'best_metric_25d': tensor([[0.7545, 0.8022, 0.7197, 0.9991, 0.6069],
        [0.8805, 0.8304, 0.9381, 0.9900, 0.7874],
        [0.8681, 0.8869, 0.8502, 0.9877, 0.7674]]), 'metric_2d': tensor([[0.6897, 0.8063, 0.6117, 0.9987, 0.5267],
        [0.8495, 0.7946, 0.9138, 0.9861, 0.7397],
        [0.8358, 0.8478, 0.8243, 0.9855, 0.7182]]), 'best_metric_2d': tensor([[0.6763, 0.8140, 0.5873, 0.9986, 0.5110],
        [0.8516, 0.7956, 0.9172, 0.9867, 0.7429],
        [0.8466, 0.8528, 0.8406, 0.9869, 0.7343]])}
{'metric': tensor([[0.8507, 0.8342, 0.8699, 0.9995, 0.7411],
        [0.9018, 0.8501, 0.9603, 0.9947, 0.8213],
        [0.9168, 0.9507, 0.8853, 0.9911, 0.8464]]), 'best_metric': tensor([[0.8493, 0.8350, 0.8664, 0.9995, 0.7388],
        [0.8975, 0.8398, 0.9638, 0.9952, 0.8142],
        [0.9183, 0.9500, 0.8888, 0.9913, 0.8490]]), 'metric_3d': tensor([[0.8316, 0.8006, 0.8671, 0.9995, 0.7124],
        [0.8972, 0.8611, 0.9364, 0.9916, 0.8137],
        [0.9137, 0.9254, 0.9029, 0.9924, 0.8412]]), 'best_metric_3d': tensor([[0.8388, 0.8092, 0.8728, 0.9995, 0.7230],
        [0.8970, 0.8543, 0.9443, 0.9926, 0.8135],
        [0.9168, 0.9284, 0.9061, 0.9926, 0.8465]]), 'metric_25d': tensor([[0.7900, 0.7476, 0.8434, 0.9994, 0.6548],
        [0.8880, 0.8430, 0.9381, 0.9918, 0.7986],
        [0.8934, 0.9275, 0.8619, 0.9893, 0.8074]]), 'best_metric_25d': tensor([[0.7868, 0.7289, 0.8610, 0.9995, 0.6497],
        [0.8845, 0.8346, 0.9407, 0.9921, 0.7929],
        [0.8979, 0.9240, 0.8732, 0.9902, 0.8147]]), 'metric_2d': tensor([[0.7066, 0.7094, 0.7177, 0.9989, 0.5468],
        [0.8573, 0.8039, 0.9184, 0.9891, 0.7502],
        [0.8556, 0.8906, 0.8233, 0.9863, 0.7477]]), 'best_metric_2d': tensor([[0.2973, 0.6868, 0.1922, 0.9972, 0.1752],
        [0.8602, 0.7973, 0.9341, 0.9912, 0.7548],
        [0.8600, 0.8963, 0.8266, 0.9866, 0.7544]])}
{'metric': tensor([[0.8393, 0.9036, 0.7900, 0.9990, 0.7236],
        [0.9091, 0.8713, 0.9504, 0.9928, 0.8333],
        [0.9208, 0.9369, 0.9055, 0.9925, 0.8532]]), 'best_metric': tensor([[0.8556, 0.8953, 0.8232, 0.9992, 0.7478],
        [0.9005, 0.8497, 0.9579, 0.9939, 0.8190],
        [0.9233, 0.9373, 0.9100, 0.9928, 0.8576]]), 'metric_3d': tensor([[0.8380, 0.8815, 0.8075, 0.9991, 0.7211],
        [0.9047, 0.8822, 0.9285, 0.9897, 0.8260],
        [0.9151, 0.9183, 0.9126, 0.9930, 0.8436]]), 'best_metric_3d': tensor([[0.8552, 0.8709, 0.8470, 0.9993, 0.7475],
        [0.9058, 0.8670, 0.9484, 0.9925, 0.8278],
        [0.9215, 0.9295, 0.9140, 0.9931, 0.8544]]), 'metric_25d': tensor([[0.7240, 0.7646, 0.7014, 0.9985, 0.5685],
        [0.8871, 0.8490, 0.9289, 0.9897, 0.7972],
        [0.8963, 0.9118, 0.8815, 0.9906, 0.8122]]), 'best_metric_25d': tensor([[0.7152, 0.7501, 0.6982, 0.9985, 0.5580],
        [0.8788, 0.8282, 0.9361, 0.9907, 0.7839],
        [0.9025, 0.9019, 0.9034, 0.9923, 0.8225]]), 'metric_2d': tensor([[0.6781, 0.7382, 0.6362, 0.9983, 0.5136],
        [0.8725, 0.8483, 0.8984, 0.9854, 0.7739],
        [0.8702, 0.8704, 0.8706, 0.9897, 0.7703]]), 'best_metric_2d': tensor([[0.5639, 0.6943, 0.4861, 0.9976, 0.3940],
        [0.8731, 0.8322, 0.9186, 0.9882, 0.7748],
        [0.8739, 0.8854, 0.8632, 0.9891, 0.7761]])}
{'metric': tensor([[0.8172, 0.8469, 0.7939, 0.9995, 0.6936],
        [0.9249, 0.9039, 0.9476, 0.9899, 0.8602],
        [0.9043, 0.9122, 0.8983, 0.9915, 0.8255]]), 'best_metric': tensor([[0.8069, 0.8282, 0.7892, 0.9995, 0.6797],
        [0.9215, 0.8954, 0.9499, 0.9903, 0.8544],
        [0.9049, 0.9110, 0.9006, 0.9917, 0.8264]]), 'metric_3d': tensor([[0.7942, 0.7638, 0.8275, 0.9996, 0.6622],
        [0.9225, 0.9131, 0.9330, 0.9872, 0.8563],
        [0.9022, 0.8974, 0.9095, 0.9924, 0.8220]]), 'best_metric_3d': tensor([[0.7959, 0.7574, 0.8389, 0.9996, 0.6647],
        [0.9233, 0.9064, 0.9417, 0.9888, 0.8576],
        [0.9064, 0.9017, 0.9136, 0.9928, 0.8291]]), 'metric_25d': tensor([[0.7661, 0.7714, 0.7676, 0.9995, 0.6250],
        [0.9138, 0.8929, 0.9364, 0.9878, 0.8412],
        [0.8867, 0.8920, 0.8829, 0.9903, 0.7966]]), 'best_metric_25d': tensor([[0.7370, 0.7248, 0.7538, 0.9994, 0.5879],
        [0.9125, 0.8828, 0.9452, 0.9894, 0.8391],
        [0.8857, 0.8999, 0.8735, 0.9895, 0.7951]]), 'metric_2d': tensor([[0.7030, 0.7304, 0.6796, 0.9993, 0.5502],
        [0.8942, 0.8748, 0.9153, 0.9837, 0.8086],
        [0.8510, 0.8483, 0.8553, 0.9880, 0.7410]]), 'best_metric_2d': tensor([[0.7246, 0.7966, 0.6698, 0.9992, 0.5737],
        [0.8957, 0.8765, 0.9166, 0.9840, 0.8111],
        [0.8618, 0.8486, 0.8772, 0.9898, 0.7575]])}
{'metric': tensor([[0.7873, 0.8992, 0.7006, 0.9989, 0.6502],
        [0.9210, 0.8997, 0.9432, 0.9871, 0.8535],
        [0.8844, 0.9079, 0.8624, 0.9871, 0.7928]]), 'best_metric': tensor([[0.8086, 0.8516, 0.7703, 0.9992, 0.6817],
        [0.9192, 0.8873, 0.9536, 0.9894, 0.8506],
        [0.8899, 0.9181, 0.8638, 0.9872, 0.8016]]), 'metric_3d': tensor([[0.7517, 0.8391, 0.6808, 0.9989, 0.6031],
        [0.9147, 0.8830, 0.9487, 0.9882, 0.8428],
        [0.8602, 0.9370, 0.7961, 0.9811, 0.7549]]), 'best_metric_3d': tensor([[0.7833, 0.8013, 0.7663, 0.9992, 0.6467],
        [0.9193, 0.8768, 0.9661, 0.9922, 0.8506],
        [0.8675, 0.9472, 0.8012, 0.9815, 0.7662]]), 'metric_25d': tensor([[0.7167, 0.7925, 0.6547, 0.9987, 0.5589],
        [0.8991, 0.9058, 0.8926, 0.9758, 0.8168],
        [0.8629, 0.8215, 0.9088, 0.9914, 0.7589]]), 'best_metric_25d': tensor([[0.7399, 0.7258, 0.7547, 0.9991, 0.5884],
        [0.8985, 0.9019, 0.8952, 0.9764, 0.8159],
        [0.8673, 0.8212, 0.9189, 0.9923, 0.7657]]), 'metric_2d': tensor([[0.6554, 0.6846, 0.6287, 0.9987, 0.4884],
        [0.8819, 0.8772, 0.8866, 0.9743, 0.7887],
        [0.8252, 0.8070, 0.8444, 0.9853, 0.7024]]), 'best_metric_2d': tensor([[0.6052, 0.6848, 0.5426, 0.9984, 0.4358],
        [0.8859, 0.8673, 0.9054, 0.9784, 0.7953],
        [0.8347, 0.8245, 0.8454, 0.9855, 0.7163]])}
res 3d is tensor([[0.8040, 0.8339, 0.7839, 0.9993, 0.6748],
        [0.9074, 0.8839, 0.9328, 0.9887, 0.8309],
        [0.8978, 0.9080, 0.8908, 0.9907, 0.8152]]) +- tensor([[0.0309, 0.0459, 0.0663, 0.0003, 0.0422],
        [0.0119, 0.0213, 0.0090, 0.0017, 0.0197],
        [0.0199, 0.0221, 0.0466, 0.0047, 0.0321]])
 res 3d best is tensor([[0.8144, 0.8228, 0.8113, 0.9994, 0.6896],
        [0.9098, 0.8789, 0.9438, 0.9906, 0.8349],
        [0.9031, 0.9153, 0.8943, 0.9910, 0.8240]]) +- tensor([[0.0272, 0.0440, 0.0478, 0.0002, 0.0380],
        [0.0126, 0.0209, 0.0138, 0.0021, 0.0209],
        [0.0190, 0.0237, 0.0459, 0.0047, 0.0310]])
 res 25d is tensor([[0.7380, 0.7680, 0.7198, 0.9991, 0.5884],
        [0.8940, 0.8653, 0.9260, 0.9870, 0.8087],
        [0.8780, 0.8850, 0.8729, 0.9895, 0.7829]]) +- tensor([[0.0388, 0.0289, 0.0753, 0.0004, 0.0483],
        [0.0119, 0.0295, 0.0172, 0.0057, 0.0194],
        [0.0158, 0.0370, 0.0232, 0.0016, 0.0251]])
 res 25d best is tensor([[0.6866, 0.7563, 0.6737, 0.9990, 0.5385],
        [0.8912, 0.8520, 0.9359, 0.9886, 0.8042],
        [0.8766, 0.8920, 0.8651, 0.9889, 0.7811]]) +- tensor([[0.1490, 0.0381, 0.2127, 0.0005, 0.1493],
        [0.0128, 0.0319, 0.0218, 0.0062, 0.0209],
        [0.0239, 0.0372, 0.0520, 0.0041, 0.0375]])
 res 2d is tensor([[0.6892, 0.7381, 0.6546, 0.9988, 0.5283],
        [0.8727, 0.8426, 0.9066, 0.9838, 0.7747],
        [0.8471, 0.8509, 0.8444, 0.9871, 0.7351]]) +- tensor([[0.0197, 0.0421, 0.0386, 0.0004, 0.0240],
        [0.0167, 0.0354, 0.0121, 0.0050, 0.0258],
        [0.0157, 0.0282, 0.0183, 0.0017, 0.0237]])
 res 2d best is tensor([[0.5410, 0.7312, 0.4563, 0.9982, 0.3872],
        [0.8749, 0.8373, 0.9176, 0.9856, 0.7782],
        [0.8555, 0.8592, 0.8530, 0.9878, 0.7478]])  +- tensor([[0.1688, 0.0584, 0.1895, 0.0007, 0.1556],
        [0.0166, 0.0349, 0.0094, 0.0043, 0.0258],
        [0.0135, 0.0267, 0.0187, 0.0017, 0.0206]])
merge res is tensor([[0.8128, 0.8769, 0.7640, 0.9992, 0.6869],
        [0.9107, 0.8757, 0.9496, 0.9912, 0.8364],
        [0.9036, 0.9217, 0.8869, 0.9905, 0.8245]]) +- tensor([[0.0274, 0.0299, 0.0659, 0.0003, 0.0388],
        [0.0129, 0.0266, 0.0058, 0.0026, 0.0213],
        [0.0139, 0.0177, 0.0164, 0.0019, 0.0231]]) 
merge best res is tensor([[0.8161, 0.8666, 0.7770, 0.9993, 0.6921],
        [0.9075, 0.8652, 0.9551, 0.9922, 0.8311],
        [0.9060, 0.9251, 0.8884, 0.9907, 0.8285]]) +- tensor([[0.0298, 0.0320, 0.0641, 0.0002, 0.0419],
        [0.0129, 0.0250, 0.0055, 0.0022, 0.0214],
        [0.0128, 0.0157, 0.0159, 0.0019, 0.0214]]) 

epoch is 250
{'metric': tensor([[0.7899, 0.8756, 0.7202, 0.9994, 0.6568],
        [0.9161, 0.8887, 0.9459, 0.9907, 0.8452],
        [0.9019, 0.9093, 0.8956, 0.9913, 0.8214]]), 'best_metric': tensor([[0.7823, 0.8923, 0.6970, 0.9993, 0.6460],
        [0.9158, 0.8804, 0.9549, 0.9922, 0.8448],
        [0.9043, 0.9214, 0.8887, 0.9907, 0.8254]]), 'metric_3d': tensor([[0.8065, 0.8216, 0.7932, 0.9995, 0.6793],
        [0.9128, 0.9023, 0.9243, 0.9871, 0.8396],
        [0.8964, 0.8839, 0.9107, 0.9925, 0.8123]]), 'best_metric_3d': tensor([[0.8059, 0.8164, 0.7968, 0.9995, 0.6781],
        [0.9202, 0.9035, 0.9384, 0.9895, 0.8523],
        [0.9069, 0.9021, 0.9131, 0.9927, 0.8297]]), 'metric_25d': tensor([[0.6754, 0.7136, 0.6413, 0.9992, 0.5147],
        [0.8969, 0.8707, 0.9252, 0.9873, 0.8131],
        [0.8657, 0.8717, 0.8605, 0.9884, 0.7632]]), 'best_metric_25d': tensor([[0.4049, 0.7806, 0.2740, 0.9982, 0.2546],
        [0.8940, 0.8380, 0.9588, 0.9929, 0.8085],
        [0.8439, 0.9168, 0.7824, 0.9822, 0.7301]]), 'metric_2d': tensor([[0.6932, 0.7743, 0.6285, 0.9991, 0.5349],
        [0.8796, 0.8558, 0.9055, 0.9838, 0.7852],
        [0.8422, 0.8394, 0.8458, 0.9873, 0.7275]]), 'best_metric_2d': tensor([[0.3624, 0.7198, 0.2427, 0.9981, 0.2213],
        [0.8821, 0.8548, 0.9118, 0.9849, 0.7892],
        [0.8555, 0.8450, 0.8670, 0.9890, 0.7475]])}
{'metric': tensor([[0.7883, 0.8990, 0.7076, 0.9990, 0.6509],
        [0.8915, 0.8413, 0.9492, 0.9918, 0.8052],
        [0.8940, 0.9127, 0.8763, 0.9898, 0.8085]]), 'best_metric': tensor([[0.7949, 0.8873, 0.7257, 0.9991, 0.6600],
        [0.8911, 0.8394, 0.9506, 0.9920, 0.8045],
        [0.8960, 0.9138, 0.8789, 0.9901, 0.8117]]), 'metric_3d': tensor([[0.8080, 0.8969, 0.7401, 0.9991, 0.6785],
        [0.8911, 0.8619, 0.9232, 0.9878, 0.8047],
        [0.8975, 0.8810, 0.9148, 0.9930, 0.8141]]), 'best_metric_3d': tensor([[0.8149, 0.8835, 0.7621, 0.9992, 0.6883],
        [0.8951, 0.8636, 0.9299, 0.9888, 0.8110],
        [0.9024, 0.8899, 0.9153, 0.9930, 0.8221]]), 'metric_25d': tensor([[0.7523, 0.8057, 0.7147, 0.9991, 0.6038],
        [0.8795, 0.8326, 0.9330, 0.9892, 0.7859],
        [0.8645, 0.8854, 0.8447, 0.9872, 0.7617]]), 'best_metric_25d': tensor([[0.7569, 0.7962, 0.7319, 0.9991, 0.6100],
        [0.8802, 0.8309, 0.9367, 0.9898, 0.7870],
        [0.8687, 0.8877, 0.8506, 0.9877, 0.7683]]), 'metric_2d': tensor([[0.6728, 0.7985, 0.5956, 0.9986, 0.5072],
        [0.8520, 0.7976, 0.9157, 0.9864, 0.7434],
        [0.8369, 0.8511, 0.8233, 0.9854, 0.7199]]), 'best_metric_2d': tensor([[0.6702, 0.7797, 0.6009, 0.9987, 0.5042],
        [0.8502, 0.7929, 0.9177, 0.9868, 0.7408],
        [0.8425, 0.8528, 0.8326, 0.9862, 0.7282]])}
{'metric': tensor([[0.8542, 0.8405, 0.8702, 0.9995, 0.7462],
        [0.9021, 0.8508, 0.9601, 0.9947, 0.8218],
        [0.9168, 0.9506, 0.8855, 0.9911, 0.8464]]), 'best_metric': tensor([[0.8541, 0.8469, 0.8630, 0.9995, 0.7459],
        [0.8964, 0.8361, 0.9661, 0.9955, 0.8123],
        [0.9171, 0.9523, 0.8846, 0.9910, 0.8470]]), 'metric_3d': tensor([[0.8324, 0.7998, 0.8694, 0.9995, 0.7138],
        [0.8972, 0.8607, 0.9369, 0.9917, 0.8137],
        [0.9134, 0.9263, 0.9015, 0.9923, 0.8407]]), 'best_metric_3d': tensor([[0.8401, 0.8122, 0.8716, 0.9995, 0.7249],
        [0.8966, 0.8511, 0.9472, 0.9930, 0.8127],
        [0.9175, 0.9304, 0.9056, 0.9926, 0.8477]]), 'metric_25d': tensor([[0.7949, 0.7546, 0.8455, 0.9994, 0.6613],
        [0.8876, 0.8443, 0.9358, 0.9915, 0.7980],
        [0.8947, 0.9242, 0.8670, 0.9897, 0.8094]]), 'best_metric_25d': tensor([[0.7929, 0.7482, 0.8489, 0.9994, 0.6581],
        [0.8850, 0.8320, 0.9452, 0.9927, 0.7937],
        [0.8971, 0.9303, 0.8663, 0.9896, 0.8134]]), 'metric_2d': tensor([[0.7148, 0.7164, 0.7233, 0.9990, 0.5564],
        [0.8572, 0.8042, 0.9179, 0.9891, 0.7501],
        [0.8533, 0.8892, 0.8202, 0.9861, 0.7441]]), 'best_metric_2d': tensor([[0.3010, 0.7069, 0.1925, 0.9972, 0.1774],
        [0.8583, 0.7933, 0.9351, 0.9913, 0.7518],
        [0.8564, 0.8949, 0.8212, 0.9862, 0.7489]])}
{'metric': tensor([[0.8404, 0.9125, 0.7845, 0.9990, 0.7253],
        [0.9087, 0.8710, 0.9499, 0.9927, 0.8327],
        [0.9210, 0.9366, 0.9063, 0.9925, 0.8536]]), 'best_metric': tensor([[0.8541, 0.8982, 0.8180, 0.9992, 0.7455],
        [0.8999, 0.8493, 0.9569, 0.9937, 0.8180],
        [0.9233, 0.9362, 0.9111, 0.9929, 0.8575]]), 'metric_3d': tensor([[0.8473, 0.8850, 0.8187, 0.9991, 0.7350],
        [0.9039, 0.8804, 0.9290, 0.9898, 0.8248],
        [0.9162, 0.9192, 0.9138, 0.9931, 0.8455]]), 'best_metric_3d': tensor([[0.8572, 0.8765, 0.8444, 0.9993, 0.7506],
        [0.9047, 0.8643, 0.9492, 0.9927, 0.8260],
        [0.9224, 0.9306, 0.9146, 0.9932, 0.8560]]), 'metric_25d': tensor([[0.7172, 0.7907, 0.6731, 0.9984, 0.5616],
        [0.8869, 0.8491, 0.9283, 0.9896, 0.7968],
        [0.8959, 0.9100, 0.8825, 0.9907, 0.8115]]), 'best_metric_25d': tensor([[0.7119, 0.7699, 0.6787, 0.9984, 0.5551],
        [0.8792, 0.8286, 0.9365, 0.9908, 0.7844],
        [0.9012, 0.9018, 0.9010, 0.9921, 0.8203]]), 'metric_2d': tensor([[0.6747, 0.7434, 0.6246, 0.9983, 0.5094],
        [0.8732, 0.8504, 0.8975, 0.9853, 0.7749],
        [0.8707, 0.8704, 0.8716, 0.9898, 0.7711]]), 'best_metric_2d': tensor([[0.5795, 0.7014, 0.5035, 0.9977, 0.4091],
        [0.8727, 0.8346, 0.9146, 0.9877, 0.7741],
        [0.8754, 0.8797, 0.8715, 0.9898, 0.7784]])}
{'metric': tensor([[0.8169, 0.8483, 0.7920, 0.9995, 0.6933],
        [0.9250, 0.9040, 0.9478, 0.9900, 0.8605],
        [0.9044, 0.9136, 0.8971, 0.9914, 0.8256]]), 'best_metric': tensor([[0.8100, 0.8291, 0.7941, 0.9995, 0.6834],
        [0.9219, 0.8944, 0.9519, 0.9907, 0.8551],
        [0.9045, 0.9149, 0.8961, 0.9914, 0.8258]]), 'metric_3d': tensor([[0.8021, 0.7675, 0.8403, 0.9996, 0.6727],
        [0.9225, 0.9134, 0.9325, 0.9871, 0.8561],
        [0.9019, 0.8987, 0.9076, 0.9923, 0.8216]]), 'best_metric_3d': tensor([[0.7945, 0.7410, 0.8578, 0.9997, 0.6629],
        [0.9236, 0.9031, 0.9460, 0.9896, 0.8581],
        [0.9058, 0.9098, 0.9041, 0.9920, 0.8280]]), 'metric_25d': tensor([[0.7634, 0.7728, 0.7604, 0.9995, 0.6218],
        [0.9139, 0.8913, 0.9384, 0.9881, 0.8414],
        [0.8861, 0.8960, 0.8779, 0.9899, 0.7957]]), 'best_metric_25d': tensor([[0.7361, 0.7368, 0.7410, 0.9994, 0.5867],
        [0.9137, 0.8856, 0.9445, 0.9893, 0.8412],
        [0.8893, 0.8997, 0.8807, 0.9901, 0.8008]]), 'metric_2d': tensor([[0.7001, 0.7441, 0.6715, 0.9992, 0.5426],
        [0.8940, 0.8752, 0.9143, 0.9835, 0.8083],
        [0.8509, 0.8471, 0.8561, 0.9881, 0.7408]]), 'best_metric_2d': tensor([[0.7272, 0.8050, 0.6688, 0.9992, 0.5771],
        [0.8967, 0.8738, 0.9216, 0.9849, 0.8127],
        [0.8603, 0.8563, 0.8658, 0.9889, 0.7552]])}
epoch is 250
epoch is 250
{'metric': tensor([[0.8105, 0.8812, 0.7511, 0.9991, 0.6832],
        [0.9193, 0.8989, 0.9406, 0.9865, 0.8507],
        [0.8796, 0.9075, 0.8538, 0.9863, 0.7852]]), 'best_metric': tensor([[0.7957, 0.9123, 0.7071, 0.9990, 0.6632],
        [0.9186, 0.8929, 0.9459, 0.9876, 0.8496],
        [0.8822, 0.9043, 0.8615, 0.9870, 0.7892]]), 'metric_3d': tensor([[0.8090, 0.8424, 0.7788, 0.9992, 0.6800],
        [0.9133, 0.9022, 0.9247, 0.9829, 0.8405],
        [0.8795, 0.9218, 0.8415, 0.9852, 0.7850]]), 'best_metric_3d': tensor([[0.8274, 0.8392, 0.8166, 0.9994, 0.7074],
        [0.9215, 0.9013, 0.9426, 0.9869, 0.8544],
        [0.8857, 0.9274, 0.8483, 0.9858, 0.7950]]), 'metric_25d': tensor([[0.6831, 0.7809, 0.6075, 0.9986, 0.5199],
        [0.9004, 0.8807, 0.9210, 0.9820, 0.8189],
        [0.8414, 0.8561, 0.8274, 0.9838, 0.7263]]), 'best_metric_25d': tensor([[0.0742, 0.8179, 0.0390, 0.9965, 0.0386],
        [0.8998, 0.8722, 0.9293, 0.9838, 0.8180],
        [0.8375, 0.8522, 0.8234, 0.9835, 0.7204]]), 'metric_2d': tensor([[0.6838, 0.7184, 0.6537, 0.9988, 0.5208],
        [0.8797, 0.8740, 0.8854, 0.9741, 0.7853],
        [0.8164, 0.8035, 0.8299, 0.9840, 0.6898]]), 'best_metric_2d': tensor([[0.1467, 0.6950, 0.0828, 0.9966, 0.0796],
        [0.8831, 0.8735, 0.8929, 0.9757, 0.7907],
        [0.8273, 0.8064, 0.8496, 0.9858, 0.7055]])}
res 3d is tensor([[0.8090, 0.8424, 0.7788, 0.9992, 0.6800],
        [0.9133, 0.9022, 0.9247, 0.9829, 0.8405],
        [0.8795, 0.9218, 0.8415, 0.9852, 0.7850]]) +- tensor([[nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan]])
 res 3d best is tensor([[0.8274, 0.8392, 0.8166, 0.9994, 0.7074],
        [0.9215, 0.9013, 0.9426, 0.9869, 0.8544],
        [0.8857, 0.9274, 0.8483, 0.9858, 0.7950]]) +- tensor([[nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan]])
 res 25d is tensor([[0.6831, 0.7809, 0.6075, 0.9986, 0.5199],
        [0.9004, 0.8807, 0.9210, 0.9820, 0.8189],
        [0.8414, 0.8561, 0.8274, 0.9838, 0.7263]]) +- tensor([[nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan]])
 res 25d best is tensor([[0.0742, 0.8179, 0.0390, 0.9965, 0.0386],
        [0.8998, 0.8722, 0.9293, 0.9838, 0.8180],
        [0.8375, 0.8522, 0.8234, 0.9835, 0.7204]]) +- tensor([[nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan]])
 res 2d is tensor([[0.6838, 0.7184, 0.6537, 0.9988, 0.5208],
        [0.8797, 0.8740, 0.8854, 0.9741, 0.7853],
        [0.8164, 0.8035, 0.8299, 0.9840, 0.6898]]) +- tensor([[nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan]])
 res 2d best is tensor([[0.1467, 0.6950, 0.0828, 0.9966, 0.0796],
        [0.8831, 0.8735, 0.8929, 0.9757, 0.7907],
        [0.8273, 0.8064, 0.8496, 0.9858, 0.7055]])  +- tensor([[nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan]])
merge res is tensor([[0.8105, 0.8812, 0.7511, 0.9991, 0.6832],
        [0.9193, 0.8989, 0.9406, 0.9865, 0.8507],
        [0.8796, 0.9075, 0.8538, 0.9863, 0.7852]]) +- tensor([[nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan]]) 
merge best res is tensor([[0.7957, 0.9123, 0.7071, 0.9990, 0.6632],
        [0.9186, 0.8929, 0.9459, 0.9876, 0.8496],
        [0.8822, 0.9043, 0.8615, 0.9870, 0.7892]]) +- tensor([[nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan]]) 

epoch is 250
{'metric': tensor([[0.8154, 0.8627, 0.7737, 0.9995, 0.6919],
        [0.9236, 0.9037, 0.9451, 0.9906, 0.8581],
        [0.9063, 0.9169, 0.8967, 0.9913, 0.8286]]), 'best_metric': tensor([[0.8199, 0.8686, 0.7769, 0.9995, 0.6982],
        [0.9239, 0.9019, 0.9478, 0.9911, 0.8587],
        [0.9075, 0.9198, 0.8964, 0.9913, 0.8307]]), 'metric_3d': tensor([[0.8211, 0.7948, 0.8498, 0.9997, 0.6993],
        [0.9208, 0.9196, 0.9228, 0.9869, 0.8533],
        [0.9058, 0.8957, 0.9174, 0.9930, 0.8279]]), 'best_metric_3d': tensor([[0.8270, 0.8492, 0.8065, 0.9996, 0.7086],
        [0.9220, 0.9123, 0.9326, 0.9885, 0.8553],
        [0.9078, 0.9037, 0.9132, 0.9927, 0.8312]]), 'metric_25d': tensor([[0.7218, 0.7575, 0.6902, 0.9993, 0.5707],
        [0.9014, 0.8701, 0.9357, 0.9890, 0.8207],
        [0.8640, 0.8962, 0.8347, 0.9863, 0.7606]]), 'best_metric_25d': tensor([[0.7255, 0.7295, 0.7217, 0.9994, 0.5750],
        [0.9026, 0.8760, 0.9315, 0.9883, 0.8226],
        [0.8667, 0.8924, 0.8433, 0.9870, 0.7649]]), 'metric_2d': tensor([[0.7412, 0.7976, 0.6936, 0.9993, 0.5936],
        [0.8862, 0.8712, 0.9024, 0.9834, 0.7958],
        [0.8520, 0.8468, 0.8580, 0.9883, 0.7422]]), 'best_metric_2d': tensor([[0.7523, 0.7741, 0.7318, 0.9994, 0.6077],
        [0.8869, 0.8704, 0.9046, 0.9837, 0.7968],
        [0.8532, 0.8495, 0.8577, 0.9882, 0.7441]])}
{'metric': tensor([[0.8062, 0.9044, 0.7334, 0.9991, 0.6756],
        [0.8985, 0.8534, 0.9498, 0.9919, 0.8165],
        [0.8991, 0.9176, 0.8814, 0.9903, 0.8168]]), 'best_metric': tensor([[0.8177, 0.8968, 0.7577, 0.9992, 0.6918],
        [0.8994, 0.8590, 0.9448, 0.9911, 0.8180],
        [0.9009, 0.9113, 0.8909, 0.9910, 0.8198]]), 'metric_3d': tensor([[0.8236, 0.9005, 0.7640, 0.9992, 0.7007],
        [0.8993, 0.8720, 0.9292, 0.9887, 0.8178],
        [0.9036, 0.8938, 0.9139, 0.9929, 0.8242]]), 'best_metric_3d': tensor([[0.8364, 0.8924, 0.7919, 0.9993, 0.7197],
        [0.8998, 0.8743, 0.9277, 0.9885, 0.8187],
        [0.9038, 0.8925, 0.9158, 0.9931, 0.8246]]), 'metric_25d': tensor([[0.7641, 0.8513, 0.7027, 0.9990, 0.6186],
        [0.8837, 0.8354, 0.9389, 0.9901, 0.7925],
        [0.8653, 0.9003, 0.8330, 0.9863, 0.7629]]), 'best_metric_25d': tensor([[0.7717, 0.8276, 0.7327, 0.9991, 0.6291],
        [0.8850, 0.8484, 0.9258, 0.9881, 0.7947],
        [0.8752, 0.8819, 0.8688, 0.9892, 0.7784]]), 'metric_2d': tensor([[0.7132, 0.7894, 0.6652, 0.9989, 0.5546],
        [0.8613, 0.8134, 0.9164, 0.9866, 0.7576],
        [0.8505, 0.8592, 0.8421, 0.9870, 0.7402]]), 'best_metric_2d': tensor([[0.7217, 0.7851, 0.6824, 0.9989, 0.5649],
        [0.8626, 0.8177, 0.9138, 0.9862, 0.7595],
        [0.8478, 0.8585, 0.8376, 0.9866, 0.7362]])}
{'metric': tensor([[0.8587, 0.8435, 0.8768, 0.9995, 0.7532],
        [0.9097, 0.8654, 0.9590, 0.9946, 0.8344],
        [0.9177, 0.9581, 0.8806, 0.9907, 0.8479]]), 'best_metric': tensor([[0.8611, 0.8397, 0.8854, 0.9996, 0.7566],
        [0.9089, 0.8654, 0.9570, 0.9943, 0.8331],
        [0.9222, 0.9517, 0.8946, 0.9918, 0.8557]]), 'metric_3d': tensor([[0.8498, 0.8183, 0.8857, 0.9996, 0.7394],
        [0.9061, 0.8730, 0.9418, 0.9923, 0.8284],
        [0.9160, 0.9431, 0.8908, 0.9915, 0.8450]]), 'best_metric_3d': tensor([[0.8473, 0.7987, 0.9045, 0.9996, 0.7355],
        [0.9060, 0.8793, 0.9344, 0.9914, 0.8283],
        [0.9240, 0.9243, 0.9241, 0.9940, 0.8587]]), 'metric_25d': tensor([[0.8009, 0.7740, 0.8340, 0.9994, 0.6698],
        [0.8941, 0.8554, 0.9366, 0.9916, 0.8085],
        [0.9003, 0.9354, 0.8677, 0.9897, 0.8186]]), 'best_metric_25d': tensor([[0.8065, 0.7714, 0.8480, 0.9994, 0.6772],
        [0.8954, 0.8580, 0.9362, 0.9916, 0.8107],
        [0.9051, 0.9297, 0.8817, 0.9908, 0.8266]]), 'metric_2d': tensor([[0.7681, 0.7386, 0.8096, 0.9993, 0.6243],
        [0.8647, 0.8173, 0.9181, 0.9891, 0.7617],
        [0.8653, 0.9063, 0.8278, 0.9867, 0.7626]]), 'best_metric_2d': tensor([[0.7443, 0.7422, 0.7575, 0.9991, 0.5936],
        [0.8660, 0.8123, 0.9276, 0.9904, 0.7637],
        [0.8602, 0.9179, 0.8094, 0.9853, 0.7547]])}
{'metric': tensor([[0.8552, 0.8936, 0.8260, 0.9991, 0.7475],
        [0.9158, 0.8920, 0.9410, 0.9915, 0.8446],
        [0.9223, 0.9435, 0.9024, 0.9922, 0.8558]]), 'best_metric': tensor([[0.8564, 0.9075, 0.8159, 0.9991, 0.7492],
        [0.9155, 0.8930, 0.9393, 0.9913, 0.8442],
        [0.9251, 0.9329, 0.9179, 0.9934, 0.8608]]), 'metric_3d': tensor([[0.8605, 0.8746, 0.8527, 0.9993, 0.7555],
        [0.9101, 0.9008, 0.9198, 0.9885, 0.8351],
        [0.9196, 0.9393, 0.9011, 0.9921, 0.8512]]), 'best_metric_3d': tensor([[0.8623, 0.8847, 0.8461, 0.9993, 0.7583],
        [0.9135, 0.9068, 0.9204, 0.9886, 0.8408],
        [0.9254, 0.9211, 0.9304, 0.9944, 0.8613]]), 'metric_25d': tensor([[0.7513, 0.7795, 0.7437, 0.9987, 0.6032],
        [0.8941, 0.8706, 0.9191, 0.9884, 0.8085],
        [0.9042, 0.9156, 0.8933, 0.9915, 0.8253]]), 'best_metric_25d': tensor([[0.7499, 0.7926, 0.7301, 0.9986, 0.6020],
        [0.8946, 0.8726, 0.9179, 0.9882, 0.8094],
        [0.9057, 0.9109, 0.9007, 0.9921, 0.8277]]), 'metric_2d': tensor([[0.7376, 0.7615, 0.7219, 0.9987, 0.5853],
        [0.8756, 0.8590, 0.8932, 0.9847, 0.7788],
        [0.8729, 0.8816, 0.8650, 0.9893, 0.7746]]), 'best_metric_2d': tensor([[0.7406, 0.7936, 0.6990, 0.9986, 0.5891],
        [0.8764, 0.8584, 0.8955, 0.9850, 0.7800],
        [0.8754, 0.8785, 0.8730, 0.9899, 0.7786]])}
{'metric': tensor([[0.8215, 0.8326, 0.8137, 0.9996, 0.6995],
        [0.9288, 0.9135, 0.9453, 0.9895, 0.8670],
        [0.9083, 0.9143, 0.9042, 0.9920, 0.8322]]), 'best_metric': tensor([[0.8221, 0.8424, 0.8058, 0.9996, 0.7004],
        [0.9286, 0.9140, 0.9444, 0.9894, 0.8667],
        [0.9107, 0.9097, 0.9135, 0.9928, 0.8363]]), 'metric_3d': tensor([[0.8190, 0.7855, 0.8558, 0.9997, 0.6960],
        [0.9279, 0.9249, 0.9318, 0.9870, 0.8656],
        [0.9096, 0.9005, 0.9212, 0.9934, 0.8345]]), 'best_metric_3d': tensor([[0.8167, 0.7793, 0.8580, 0.9997, 0.6931],
        [0.9285, 0.9184, 0.9396, 0.9885, 0.8666],
        [0.9121, 0.9087, 0.9179, 0.9931, 0.8387]]), 'metric_25d': tensor([[0.7723, 0.7420, 0.8095, 0.9996, 0.6323],
        [0.9168, 0.8999, 0.9352, 0.9876, 0.8465],
        [0.8899, 0.9034, 0.8781, 0.9899, 0.8017]]), 'best_metric_25d': tensor([[0.7805, 0.7777, 0.7880, 0.9995, 0.6436],
        [0.9193, 0.9086, 0.9312, 0.9868, 0.8508],
        [0.8974, 0.8886, 0.9081, 0.9923, 0.8143]]), 'metric_2d': tensor([[0.6868, 0.6853, 0.6908, 0.9993, 0.5279],
        [0.8951, 0.8819, 0.9096, 0.9827, 0.8102],
        [0.8550, 0.8458, 0.8660, 0.9889, 0.7470]]), 'best_metric_2d': tensor([[0.7324, 0.7978, 0.6835, 0.9993, 0.5837],
        [0.9014, 0.8901, 0.9138, 0.9835, 0.8204],
        [0.8635, 0.8549, 0.8738, 0.9895, 0.7600]])}
{'metric': tensor([[0.8181, 0.8902, 0.7569, 0.9991, 0.6927],
        [0.9223, 0.9032, 0.9422, 0.9868, 0.8559],
        [0.8827, 0.9184, 0.8501, 0.9860, 0.7901]]), 'best_metric': tensor([[0.8223, 0.8856, 0.7676, 0.9992, 0.6994],
        [0.9222, 0.8992, 0.9465, 0.9878, 0.8558],
        [0.8868, 0.9123, 0.8630, 0.9872, 0.7967]]), 'metric_3d': tensor([[0.7956, 0.8015, 0.7903, 0.9992, 0.6618],
        [0.9112, 0.8861, 0.9379, 0.9857, 0.8371],
        [0.8565, 0.9456, 0.7839, 0.9800, 0.7493]]), 'best_metric_3d': tensor([[0.8085, 0.8351, 0.7837, 0.9992, 0.6801],
        [0.9188, 0.8832, 0.9574, 0.9902, 0.8498],
        [0.8655, 0.9418, 0.8016, 0.9816, 0.7630]]), 'metric_25d': tensor([[0.7257, 0.8394, 0.6394, 0.9987, 0.5695],
        [0.9031, 0.9025, 0.9036, 0.9782, 0.8234],
        [0.8669, 0.8384, 0.8973, 0.9903, 0.7652]]), 'best_metric_25d': tensor([[0.7436, 0.7655, 0.7232, 0.9990, 0.5920],
        [0.9030, 0.9082, 0.8978, 0.9770, 0.8232],
        [0.8680, 0.8290, 0.9109, 0.9916, 0.7669]]), 'metric_2d': tensor([[0.6752, 0.7344, 0.6250, 0.9986, 0.5100],
        [0.8852, 0.8787, 0.8919, 0.9755, 0.7941],
        [0.8287, 0.8261, 0.8315, 0.9842, 0.7075]]), 'best_metric_2d': tensor([[0.6672, 0.7375, 0.6093, 0.9986, 0.5014],
        [0.8893, 0.8764, 0.9027, 0.9779, 0.8008],
        [0.8354, 0.8377, 0.8333, 0.9844, 0.7174]])}
res 3d is tensor([[0.8283, 0.8292, 0.8330, 0.9994, 0.7088],
        [0.9126, 0.8961, 0.9305, 0.9882, 0.8396],
        [0.9018, 0.9197, 0.8881, 0.9905, 0.8220]]) +- tensor([[0.0234, 0.0472, 0.0459, 0.0002, 0.0336],
        [0.0103, 0.0229, 0.0085, 0.0023, 0.0173],
        [0.0230, 0.0254, 0.0523, 0.0052, 0.0370]])
 res 3d best is tensor([[0.8330, 0.8399, 0.8318, 0.9994, 0.7159],
        [0.9148, 0.8957, 0.9353, 0.9893, 0.8432],
        [0.9064, 0.9153, 0.9005, 0.9915, 0.8296]]) +- tensor([[0.0199, 0.0452, 0.0463, 0.0002, 0.0285],
        [0.0106, 0.0190, 0.0126, 0.0012, 0.0177],
        [0.0218, 0.0174, 0.0488, 0.0049, 0.0358]])
 res 25d is tensor([[0.7560, 0.7906, 0.7366, 0.9991, 0.6107],
        [0.8989, 0.8723, 0.9282, 0.9875, 0.8167],
        [0.8817, 0.8982, 0.8674, 0.9890, 0.7891]]) +- tensor([[0.0299, 0.0446, 0.0743, 0.0004, 0.0384],
        [0.0112, 0.0258, 0.0140, 0.0048, 0.0183],
        [0.0186, 0.0325, 0.0281, 0.0022, 0.0297]])
 res 25d best is tensor([[0.7629, 0.7774, 0.7573, 0.9992, 0.6198],
        [0.9000, 0.8786, 0.9234, 0.9867, 0.8185],
        [0.8863, 0.8888, 0.8856, 0.9905, 0.7964]]) +- tensor([[0.0291, 0.0323, 0.0509, 0.0003, 0.0375],
        [0.0115, 0.0251, 0.0140, 0.0050, 0.0189],
        [0.0184, 0.0341, 0.0263, 0.0021, 0.0297]])
 res 2d is tensor([[0.7204, 0.7511, 0.7010, 0.9990, 0.5659],
        [0.8780, 0.8536, 0.9052, 0.9837, 0.7830],
        [0.8541, 0.8610, 0.8484, 0.9874, 0.7457]]) +- tensor([[0.0353, 0.0412, 0.0624, 0.0003, 0.0430],
        [0.0132, 0.0306, 0.0113, 0.0046, 0.0207],
        [0.0151, 0.0288, 0.0169, 0.0019, 0.0229]])
 res 2d best is tensor([[0.7264, 0.7717, 0.6939, 0.9990, 0.5734],
        [0.8804, 0.8542, 0.9097, 0.9844, 0.7869],
        [0.8559, 0.8662, 0.8474, 0.9873, 0.7485]])  +- tensor([[0.0308, 0.0260, 0.0508, 0.0003, 0.0379],
        [0.0148, 0.0321, 0.0112, 0.0041, 0.0234],
        [0.0138, 0.0286, 0.0253, 0.0023, 0.0210]])
merge res is tensor([[0.8292, 0.8712, 0.7967, 0.9993, 0.7101],
        [0.9164, 0.8885, 0.9471, 0.9908, 0.8461],
        [0.9061, 0.9281, 0.8859, 0.9904, 0.8286]]) +- tensor([[0.0221, 0.0293, 0.0523, 0.0002, 0.0322],
        [0.0110, 0.0239, 0.0066, 0.0026, 0.0184],
        [0.0141, 0.0182, 0.0203, 0.0023, 0.0234]]) 
merge best res is tensor([[0.8332, 0.8734, 0.8015, 0.9993, 0.7159],
        [0.9164, 0.8887, 0.9467, 0.9908, 0.8461],
        [0.9089, 0.9229, 0.8961, 0.9913, 0.8333]]) +- tensor([[0.0199, 0.0282, 0.0468, 0.0002, 0.0289],
        [0.0108, 0.0218, 0.0058, 0.0022, 0.0181],
        [0.0141, 0.0165, 0.0195, 0.0022, 0.0236]]) 

